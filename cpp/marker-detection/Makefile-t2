##-------------------------------------------------------------------------------------------
# \author  Akihiko Yamaguchi, akihiko-y@is.naist.jp / ay@akiyam.sakura.ne.jp
# \version 0.1
# \date    Aug.08, 2012
##-------------------------------------------------------------------------------------------
EXEC := test-cv2.out
# ARC := ARC_NAME
LIBOBJS :=
CXX := g++
AR := ar
ifeq ($(DEBUG),true)
  CXXFLAGS := -g -Wall -rdynamic
else
  CXXFLAGS := -g -Wall -rdynamic -O2 -march=i686
endif
LDFLAGS  := $(CXXFLAGS)
RMFLAGS  :=  -vf
##-------------------------------------------------------------------------------------------
BASEPREFIX := $(wildcard ~/prg)
##-------------------------------------------------------------------------------------------
## make  *.o  from  *.c and *.cpp
OBJS:= buffer.o edgel.o edgeldetector.o linesegment.o test-cv2.o
##-------------------------------------------------------------------------------------------
LIBS    := -I/usr/include -I/usr/local/include
LDLIBS  := -lm -L/usr/local/lib
##-------------------------------------------------------------------------------------------
## for libskyai
# LIBSKYAI := $(wildcard ~/proj/skyai)/libskyai
# LIBS    += -I$(LIBSKYAI)/include
# LIBOBJS+= $(LIBSKYAI)/lib/*.o $(LIBSKYAI)/lib/libskyai.a
# LDLIBS += -lboost_filesystem -lboost_regex
##-------------------------------------------------------------------------------------------
## for liblora
# LIBLORA := $(wildcard ~/proj/skyai)/liblora
# LIBS    += -I$(LIBLORA)/include
# LIBOBJS += $(LIBLORA)/lib/liblora_oct.a $(LIBLORA)/lib/liblora_ode.a $(LIBLORA)/lib/liblora.a
##-------------------------------------------------------------------------------------------
## for Octave
# LIBS   += -I/usr/include/octave-`octave-config -v`
# LDLIBS += -L/usr/lib/octave-`octave-config -v` -loctave -lcruft -Wl,-rpath /usr/lib/octave-`octave-config -v`
# LDLIBS += -ldl -lfftw3 -L/usr/lib/atlas -latlas -llapack -lblas
##-------------------------------------------------------------------------------------------
## for ODE
# LIBS   += -I$(BASEPREFIX)/libode/ode-0.10.1/include
# LIBS   += -DODE_MINOR_VERSION=10 -DdDOUBLE#for ODE-0.10.1
# LDLIBS += $(BASEPREFIX)/libode/ode-0.10.1/ode/src/.libs/libode.a
# LDLIBS += $(BASEPREFIX)/libode/ode-0.10.1/drawstuff/src/.libs/libdrawstuff.a
# LDLIBS += -lSM -lICE -lGL -L/usr/X11R6/lib -lXext -lX11 -ldl -lGLU -lpthread
##-------------------------------------------------------------------------------------------
## for OpenCV
LIBS   += `pkg-config opencv --cflags`
LDLIBS += `pkg-config opencv --libs`
##-------------------------------------------------------------------------------------------
all : libobjs $(EXEC)
# all : libobjs $(ARC)
##-------------------------------------------------------------------------------------------
## additional make
libobjs :
# 	@(set -e; make -C $(LIBLORA)/src std oct ode)
# 	@(set -e; make -C $(LIBSKYAI)/src)
##-------------------------------------------------------------------------------------------
## generic make rules

clean   :
	@rm $(RMFLAGS) *.o *.a *.il $(OBJS) $(EXEC) $(ARC) $(EXTRA_CLEAN)
	@find -name '*.d' -type f | xargs rm $(RMFLAGS)

$(EXEC) : $(OBJS) $(LIBOBJS)
	$(CXX) -o $@ $(OBJS) $(LDFLAGS) $(LIBOBJS) $(LDLIBS)
	@(becho "$(EXEC) is generated")

# $(ARC) : $(OBJS) $(LIBOBJS)
# 	$(AR) r $(ARC) $(OBJS) $(LIBOBJS)
# 	@(becho "$(ARC) is generated")

%.o : %.cpp
	$(CXX) -o $@ $(LIBS) $(CXXFLAGS) -c $<

DEPOPT  ?= -MM

%.d: %.cpp
	@(rm -f $@; \
	$(CXX) $(DEPOPT) $(LIBS) $(CXXFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	[ -s $@ ] || rm -f $@; \
	rm -f $@.$$$$; \
	)
##-------------------------------------------------------------------------------------------
include $(OBJ:.o=.d) $(OBJS:.o=.d) $(objects:.o=.d) $(addsuffix .d, $(BINARY))
##-------------------------------------------------------------------------------------------
